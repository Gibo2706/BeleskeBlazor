@page "/create-note"
@using BeleskeBlazor.Shared.DTO
@using System.Collections.ObjectModel
@using BeleskeBlazor.Client.Service
@using Radzen.Blazor
@using Radzen
@using Radzen.Blazor.Rendering
@using System.Text
@inject NavigationManager Navigation
@inject DataService DataService



<div class="container mt-5 text-center">
    <h1>Welcome to your Notes App!</h1>
    <hr>
    <div class="mt-3">
        <form @onsubmit="SacuvajBelesku">
            <div class="mb-3">
                @if(Predmeti != null && Predmeti.Count > 0){
                <label for="subjectSelect" class="form-label">Subject:</label>
                <select class="form-select" id="subjectSelect" @bind:get="SelectedSubjectId" @bind:set="SubjectInput" >
                    <option selected>Choose...</option>
                    @foreach (var subject in Predmeti)
                    {
                        <option value="@subject">@subject.Naziv</option>
                    }
                </select>
                }

            </div>
            <div class="mb-3">
                @if (Semestri != null && Semestri.Count > 0){
                <label for="lectureSelect" class="form-label">Semestar:</label>
                <select class="form-select" id="subjectSelect" @bind:get="SelectedSemestarId" @bind:set="SemestarInput">
                        @foreach (var sem in Semestri)
                        {
                            <option value="@sem">@sem.Broj </option>
                        }
                    }
                </select>
                }
            </div>
            <div class="mb-3">
                @if (Casovi != null && Casovi.Count > 0){
                    <label for="lectureSelect" class="form-label">Lecture:</label>
                    <select class="form-select" id="subjectSelect" @bind:get="SelectedLectureId" @bind:set="LectureInput">
                        <option selected>Choose...</option>
                    
                            @foreach (var subject in Casovi)
                            {
                                <option value="@subject">@subject.RedniBroj - @subject.Datum</option>
                            }
                    </select>
                }
            </div>
            @if (SelectedLectureId != null && SelectedSubjectId != null)
            {
                <div class="mb-3">
                    <label for="noteTitle" class="form-label">Note Title:</label>
                    <input type="text" class="form-control" id="noteTitle"  @bind-value="title"/>
                </div>
                <div class="mb-3">
                    <label for="noteContent" class="form-label">Note Content:</label>
                    <RadzenHtmlEditor @ref="editor" @bind-Value="@content">
                        <RadzenHtmlEditorUndo />
                        <RadzenHtmlEditorRedo />
                        <RadzenHtmlEditorSeparator />
                        <RadzenHtmlEditorBold />
                        <RadzenHtmlEditorItalic />
                        <RadzenHtmlEditorUnderline />
                        <RadzenHtmlEditorStrikeThrough />
                        <RadzenHtmlEditorSeparator />
                        <RadzenHtmlEditorAlignLeft />
                        <RadzenHtmlEditorAlignCenter />
                        <RadzenHtmlEditorAlignRight />
                        <RadzenHtmlEditorJustify />
                        <RadzenHtmlEditorSeparator />
                        <RadzenHtmlEditorIndent />
                        <RadzenHtmlEditorOutdent />
                        <RadzenHtmlEditorUnorderedList />
                        <RadzenHtmlEditorOrderedList />
                        <RadzenHtmlEditorSeparator />
                        <RadzenHtmlEditorColor />
                        <RadzenHtmlEditorBackground />
                        <RadzenHtmlEditorRemoveFormat />
                        <RadzenHtmlEditorSeparator />
                        <RadzenHtmlEditorSubscript />
                        <RadzenHtmlEditorSuperscript />
                        <RadzenHtmlEditorSeparator />
                        <RadzenHtmlEditorFontName />
                        <RadzenHtmlEditorFontSize />
                        <RadzenHtmlEditorFormatBlock />
                    </RadzenHtmlEditor>
                </div>
                <input type="hidden" id="studentId"  />
                <button type="submit" class="btn btn-primary">Create Note</button>
            }
        </form>
    </div>
</div>

@code {
    RadzenHtmlEditor? editor;
    List<PredmetDTO>? Predmeti;
    ObservableCollection<CasDTO>? Casovi;
    ObservableCollection<SemestarDTO>? Semestri;
    PredmetDTO? SelectedSubjectId = null;
    CasDTO? SelectedLectureId = null;
    SemestarDTO? SelectedSemestarId = null;
    bool IsSelected;
    string title;
    string content = "";

    protected override async Task OnInitializedAsync()
    {
        content = "";
        IsSelected = false;
        Casovi = new ObservableCollection<CasDTO>();
        Semestri = new ObservableCollection<SemestarDTO>();
        Predmeti = await DataService.GetAllSubjects();

    }


    private async Task SubjectInput(PredmetDTO id)
    {
        SelectedSubjectId = id;
        Semestri!.Clear();
        IsSelected = true;
        (await GetSemestarsAsync(SelectedSubjectId.IdPredmet)).ForEach(x => Semestri.Add(x));
        SelectedLectureId = null;
        SelectedSemestarId = null;
    }

    private async Task SemestarInput(SemestarDTO id)
    {
        SelectedSemestarId = id; 
        Casovi!.Clear();
        (await GetLecturesAsync(SelectedSubjectId.IdPredmet, id.IdSemestar)).ForEach(x => Casovi.Add(x));
        SelectedLectureId = null;
    }

    private Task<List<SemestarDTO>> GetSemestarsAsync(int subjectId) => DataService.GetAllSemestarsForSubject(subjectId);

    private Task<List<CasDTO>> GetLecturesAsync(int subjectId, int lectureId) => DataService.GetAllLecturesForSubjectSemestar(subjectId, lectureId);

    private void LectureInput(CasDTO id)
    {
        SelectedLectureId = id;
    }

    private async Task SacuvajBelesku()
    {
        byte[] beleska = Encoding.UTF8.GetBytes(content);
        bool saved = await DataService.SaveBeleska(title, null, beleska, 0, SelectedLectureId, null);
        if (saved)
        {
            Navigation.NavigateTo("/");
        }
        else
        {
            //error

        }
    }

}
